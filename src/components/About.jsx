import React, { useEffect } from "react";
import gsap from "gsap";
import ScrollTrigger from "gsap/ScrollTrigger";
const text = [
  "I",
  "â€™",
  "m",
  "*",
  "A",
  "t",
  "i",
  "v",
  "o",
  "r",
  "*",
  "G",
  "o",
  "d",
  "s",
  "w",
  "a",
  "y",
  "*",
  "K",
  "w",
  "a",
  "b",
  "l",
  "a",
  ",",
  "*",
  "a",
  "*",
  "p",
  "a",
  "s",
  "s",
  "i",
  "o",
  "n",
  "a",
  "t",
  "e",
  "*",
  "w",
  "e",
  "b",
  "*",
  "d",
  "e",
  "v",
  "e",
  "l",
  "o",
  "p",
  "e",
  "r",
  "*",
  "w",
  "i",
  "t",
  "h",
  "*",
  "a",
  "*",
  "s",
  "t",
  "r",
  "o",
  "n",
  "g",
  "*",
  "f",
  "o",
  "u",
  "n",
  "d",
  "a",
  "t",
  "i",
  "o",
  "n",
  "*",
  "i",
  "n",
  "*",
  "H",
  "T",
  "M",
  "L",
  ",",
  "*",
  "C",
  "S",
  "S",
  ",",
  "*",
  "J",
  "a",
  "v",
  "a",
  "S",
  "c",
  "r",
  "i",
  "p",
  "t",
  ",",
  "*",
  "a",
  "n",
  "d",
  "*",
  "R",
  "e",
  "a",
  "c",
  "t",
  ".",
  "*",
  "I",
  "*",
  "e",
  "n",
  "j",
  "o",
  "y",
  "*",
  "t",
  "u",
  "r",
  "n",
  "i",
  "n",
  "g",
  "*",
  "i",
  "d",
  "e",
  "a",
  "s",
  "*",
  "i",
  "n",
  "t",
  "o",
  "*",
  "c",
  "l",
  "e",
  "a",
  "n",
  ",",
  "*",
  "f",
  "u",
  "n",
  "c",
  "t",
  "i",
  "o",
  "n",
  "a",
  "l",
  ",",
  "*",
  "a",
  "n",
  "d",
  "*",
  "u",
  "s",
  "e",
  "r",
  "-",
  "f",
  "r",
  "i",
  "e",
  "n",
  "d",
  "l",
  "y",
  "*",
  "w",
  "e",
  "b",
  "*",
  "a",
  "p",
  "p",
  "l",
  "i",
  "c",
  "a",
  "t",
  "i",
  "o",
  "n",
  "s",
  ".",
  "*",
  "B",
  "e",
  "y",
  "o",
  "n",
  "d",
  "*",
  "c",
  "o",
  "d",
  "i",
  "n",
  "g",
  ",",
  "*",
  "I",
  "*",
  "b",
  "r",
  "i",
  "n",
  "g",
  "*",
  "c",
  "r",
  "e",
  "a",
  "t",
  "i",
  "v",
  "i",
  "t",
  "y",
  "*",
  "a",
  "n",
  "d",
  "*",
  "p",
  "r",
  "o",
  "b",
  "l",
  "e",
  "m",
  "-",
  "s",
  "o",
  "l",
  "v",
  "i",
  "n",
  "g",
  "*",
  "f",
  "r",
  "o",
  "m",
  "*",
  "m",
  "y",
  "*",
  "b",
  "a",
  "c",
  "k",
  "g",
  "r",
  "o",
  "u",
  "n",
  "d",
  "*",
  "i",
  "n",
  "*",
  "t",
  "e",
  "c",
  "h",
  ",",
  "*",
  "d",
  "e",
  "s",
  "i",
  "g",
  "n",
  ",",
  "*",
  "a",
  "n",
  "d",
  "*",
  "i",
  "n",
  "n",
  "o",
  "v",
  "a",
  "t",
  "i",
  "o",
  "n",
  ".",
  "*",
  "M",
  "y",
  "*",
  "g",
  "o",
  "a",
  "l",
  "*",
  "i",
  "s",
  "*",
  "t",
  "o",
  "*",
  "b",
  "u",
  "i",
  "l",
  "d",
  "*",
  "i",
  "m",
  "p",
  "a",
  "c",
  "t",
  "f",
  "u",
  "l",
  "*",
  "d",
  "i",
  "g",
  "i",
  "t",
  "a",
  "l",
  "*",
  "s",
  "o",
  "l",
  "u",
  "t",
  "i",
  "o",
  "n",
  "s",
  "*",
  "t",
  "h",
  "a",
  "t",
  "*",
  "h",
  "e",
  "l",
  "p",
  "*",
  "b",
  "u",
  "s",
  "i",
  "n",
  "e",
  "s",
  "s",
  "e",
  "s",
  "*",
  "a",
  "n",
  "d",
  "*",
  "i",
  "n",
  "d",
  "i",
  "v",
  "i",
  "d",
  "u",
  "a",
  "l",
  "s",
  "*",
  "t",
  "h",
  "r",
  "i",
  "v",
  "e",
  ".",
];

gsap.registerPlugin(ScrollTrigger);
const About = () => {
  useEffect(() => {
    let context = gsap.context(() => {
      let tl = gsap.timeline({
        scrollTrigger: {
          trigger: ".container",
          pin: true,
          start: "top 10%",
          end: "bottom top",
          scrub: 1,
          ease: "linear",
        },
      });

      tl.to(".text", { color: "black", stagger: 0.4 });
    });
    return () => context.revert();
  });

  return (
    <div className=" bg-white min-h-screen ">
      <div className="container w-[100vw]   m-auto flex flex-col   items-start justify-center text-black px-5  ">
        <h2 className="text-lg md:text-5xl rubik mr-10 mt-5">About</h2>

        <div className="flex flex-wrap  w-[95%] text-lg md:text-3xl  p-3 font-thin ">
          {text.map((letter, index) =>
            letter === "*" ? (
              <p key={index} className="opacity-0">
                A
              </p>
            ) : (
              <p key={index} className="text text-[#6362620f] oswald ">
                {letter} <br />
              </p>
            )
          )}
        </div>
      </div>
    </div>
  );
};

export default About;
